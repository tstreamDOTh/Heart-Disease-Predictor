function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 15-Oct-2016 21:02:29.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx10 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_remove = 5;
x1_step1_keep = [1 2 3 4 6 7 8 9 10];
x1_step2_xoffset = [32;0;1;80;0;60;0;-2.6;1];
x1_step2_gain = [0.0476190476190476;2;0.666666666666667;0.0166666666666667;1;0.0163934426229508;2;0.317460317460317;1];
x1_step2_ymin = -1;

% Layer 1
b1 = [-0.010075443368743773;-0.0099785453707350261;0.0050449267159313497;-0.010991687262979223;-0.0087795717263560655;0.010922805111668907;0.18184376294341342;-0.010881567348114685;0.0083390673619317419;0.010072927998327997];
IW1_1 = [-0.012744447343262274 -0.0018446398085799451 0.018941409516345327 0.020545216438737256 0.0028996637323755888 -0.0532104054225307 -0.0068865132853610225 0.053098233720435706 -0.005125768676595319;-0.012620279171800744 -0.001826932160747487 0.018765218980416387 0.020355653519861062 0.0028721263236760079 -0.052716843225706356 -0.0068243739528171228 0.052604329295555169 -0.0050771632081107725;0.0063492638903916579 0.00092291577421983522 -0.00960890980141243 -0.01045270839545432 -0.0014587907640732927 0.027019144965948927 0.0035327254040137608 -0.026933438717680374 0.0025808941599051293;-0.013920865904277683 -0.0020118333710510087 0.020599479935439657 0.02232671020835721 0.0031595304618841137 -0.057852750276230096 -0.0074685312227673025 0.057745717946867746 -0.0055844413437643242;-0.011087509101005576 -0.0016075296474187032 0.01657235251686847 0.017992609348533455 0.0025305805218981572 -0.046570346163382709 -0.0060466211613886788 0.046456649900491268 -0.0044742545393941903;0.013832274840432573 0.0019992814156491352 -0.020475335409013154 -0.022193482399431624 -0.0031400276619212631 0.057505323039832024 0.0074251316369483627 -0.057397782720269873 0.0055500182934095556;0.21780692926723721 -0.055436201816293607 -0.22706491510217894 -0.12292918658201725 -0.06201018961958514 0.37701147344697861 -0.0078794849690654346 -0.38844300071514776 0.071241029510462767;-0.01377924977772025 -0.0019917654237365258 0.020400973691005346 0.022113667205314436 0.0031283492125513818 -0.057297203681139601 -0.0073991214505137433 0.057189368827805002 -0.0055294055132663221;0.010525965151364435 0.0015268206941789913 -0.015760978041905346 -0.017116647834667705 -0.0024047423036808145 0.044294567823399057 0.0057569229543845638 -0.044181801579901682 0.0042520819352688307;0.012741223490834624 0.0018441801917121511 -0.018936837794577839 -0.020540298335169828 -0.002898949019353724 0.053197599256527048 0.0068849016081816193 -0.053085418191765939 0.0051245071629659718];

% Layer 2
b2 = -0.12047701738844023;
LW2_1 = [0.082432613004448027 0.081664410007132565 -0.041783534658993884 0.0896632252418256 0.072105783835183138 -0.089121770134557521 -0.66010285975700422 0.088797448041429083 -0.068570214470749916 -0.082412679627833552];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.5;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    temp = removeconstantrows_apply(X{1,ts},x1_step1_keep,x1_step1_remove);
    Xp1 = mapminmax_apply(temp,x1_step2_gain,x1_step2_xoffset,x1_step2_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings_keep,settings_remove)
if isempty(settings_remove)
    y = x;
else
    y = x(settings_keep,:);
end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
